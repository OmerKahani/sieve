{
    "cassandrabackup": {},
    "cassandracluster": {},
    "cassandradatacenter": {
        "cassandra-datacenter": [
            "metadata/annotations",
            "metadata/creationTimestamp",
            "metadata/generation",
            "metadata/labels",
            "metadata/resourceVersion",
            "metadata/uid"
        ]
    },
    "deployment": {
        "cassandra-operator": [
            "metadata/annotations",
            "metadata/creationTimestamp",
            "metadata/generation",
            "metadata/managedFields",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/template/spec/containers/*/env",
            "spec/template/spec/containers/*/image",
            "status/conditions",
            "status/observedGeneration"
        ]
    },
    "persistentvolumeclaim": {
        "data-volume-cassandra-test-cluster-dc1-rack1-0": [
            "metadata/annotations",
            "metadata/creationTimestamp",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/volumeName"
        ]
    },
    "pod": {
        "cassandra-test-cluster-dc1-rack1-0": [
            "metadata/creationTimestamp",
            "metadata/generateName",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/ownerReferences",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/containers/*/env",
            "spec/containers/*/image",
            "spec/containers/*/volumeMounts/*/name",
            "spec/initContainers/*/image",
            "spec/initContainers/*/volumeMounts/*/name",
            "spec/nodeName",
            "spec/volumes/*/name",
            "spec/volumes/*/secret/secretName",
            "status/conditions",
            "status/containerStatuses/*/containerID",
            "status/containerStatuses/*/image",
            "status/containerStatuses/*/imageID",
            "status/containerStatuses/*/state/running/startedAt",
            "status/hostIP",
            "status/initContainerStatuses/*/containerID",
            "status/initContainerStatuses/*/image",
            "status/initContainerStatuses/*/imageID",
            "status/initContainerStatuses/*/state/terminated/containerID",
            "status/initContainerStatuses/*/state/terminated/finishedAt",
            "status/initContainerStatuses/*/state/terminated/startedAt",
            "status/podIP",
            "status/podIPs/*/ip",
            "status/startTime"
        ]
    },
    "secret": {},
    "service": {
        "cassandra-operator-metrics": [
            "metadata/creationTimestamp",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/ownerReferences",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/clusterIP",
            "spec/ports"
        ],
        "cassandra-test-cluster-dc1-nodes": [
            "metadata/creationTimestamp",
            "metadata/managedFields",
            "metadata/ownerReferences",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/ports"
        ],
        "cassandra-test-cluster-dc1-seeds": [
            "metadata/annotations",
            "metadata/creationTimestamp",
            "metadata/managedFields",
            "metadata/ownerReferences",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/ports"
        ],
        "kubernetes": [
            "metadata/creationTimestamp",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/clusterIP",
            "spec/ports"
        ]
    },
    "statefulset": {
        "cassandra-test-cluster-dc1-rack1": [
            "metadata/creationTimestamp",
            "metadata/generation",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/ownerReferences",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/template/spec/containers/*/env",
            "spec/template/spec/containers/*/image",
            "spec/template/spec/initContainers/*/image",
            "status/observedGeneration"
        ]
    }
}